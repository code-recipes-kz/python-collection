"""
Определяется функция count_characters(s), которая принимает на вход один аргумент - строку s.
Создается пустой словарь char_count, который будет использоваться для хранения количества вхождений символов.
Проходится циклом for по каждому символу char во входной строке s.
Для каждого символа char выполняются следующие действия:
Проверяется, содержится ли символ char уже в словаре char_count с использованием оператора in.
Если символ char уже есть в словаре, то его значение в словаре увеличивается на 1 с помощью оператора +=, который является сокращенной формой записи для char_count[char] = char_count[char] + 1.
Если символ char еще не содержится в словаре, то он добавляется в словарь со значением 1.
После завершения цикла, словарь char_count содержит количество вхождений каждого символа во входной строке s.
Функция возвращает словарь char_count.
Затем, в основной части кода, пользователю предлагается ввести строку с клавиатуры с помощью функции input(), введенная строка передается в функцию count_characters() в качестве аргумента, и результат работы функции сохраняется в переменную result.
Наконец, результат result выводится на экран с помощью функции print().
"""

# tags: Strings, Fundamentals
# kyu: 6

def count_characters(s):
    """
    Функция принимает на вход строку s и возвращает словарь, содержащий количество вхождений каждого символа в строке.
    """
    char_count = {}  # создаем пустой словарь для хранения количества вхождений символов
    for char in s:
        if char in char_count:
            char_count[char] += 1  # если символ уже есть в словаре, увеличиваем его счетчик на 1
        else:
            char_count[char] = 1  # иначе добавляем символ в словарь со значением 1
    return char_count