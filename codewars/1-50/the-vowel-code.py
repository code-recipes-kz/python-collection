"""
Создается функция encode(string), которая принимает входную строку string в качестве аргумента.

Создается словарь vowels, где ключи - это гласные буквы, которые нужно заменить, и значения - соответствующие числа, на которые они будут заменены.

Создается пустая строка encoded_string, в которую будут добавляться закодированные символы.

Проходится циклом for по каждому символу char во входной строке string.

Для каждого символа char проверяется, присутствует ли он в словаре vowels (т.е. является ли он гласной буквой для замены).

Если символ char является гласной буквой, то в encoded_string добавляется соответствующее число из словаря vowels.

Если символ char не является гласной буквой, то он добавляется в encoded_string без изменений.

После прохода по всем символам входной строки string, encoded_string содержит закодированную строку, и она возвращается в качестве результата работы функции.

Создается функция decode(string), которая принимает закодированную строку string в качестве аргумента.

Создается словарь numbers, где ключи - это числа из закодированной строки, а значения - соответствующие гласные буквы, на которые числа будут заменены.

Создается пустая строка decoded_string, в которую будут добавляться декодированные символы.

Проходится циклом for по каждому символу char в закодированной строке string.

Для каждого символа char проверяется, присутствует ли он в словаре numbers (т.е. является ли он числом для декодирования).

Если символ char является числом, то в decoded_string добавляется соответствующая гласная буква из словаря numbers.

Если символ char не является числом, то он добавляется в decoded_string без изменений.

После прохода по всем символам закодированной строки string, decoded_string содержит декодированную строку, и она возвращается в качестве результата работы функции.
"""

# tags: Arrays, Strings, Regular expressions, Fundamentals
# kyu: 6

def encode(string):
    vowels = {'a': '1', 'e': '2', 'i': '3', 'o': '4', 'u': '5'}
    encoded_string = ''
    for char in string:
        if char in vowels:
            encoded_string += vowels[char]
        else:
            encoded_string += char
    return encoded_string

def decode(string):
    numbers = {'1': 'a', '2': 'e', '3': 'i', '4': 'o', '5': 'u'}
    decoded_string = ''
    for char in string:
        if char in numbers:
            decoded_string += numbers[char]
        else:
            decoded_string += char
    return decoded_string
