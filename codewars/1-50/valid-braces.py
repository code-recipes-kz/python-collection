"""
Функция is_valid_braces принимает на вход строку s, содержащую только скобки - круглые (), квадратные [] и фигурные {} скобки. Она проверяет, является ли порядок этих скобок в строке s валидным.

Функция использует стек (список) для отслеживания открытых скобок. Если встречается открывающая скобка, она добавляется в стек. Если встречается закрывающая скобка, функция проверяет, соответствует ли она ожидаемой открытой скобке на вершине стека. Если нет, то возвращается False, иначе соответствующая открытая скобка удаляется из стека. Если после обработки всех символов в строке стек остается пустым, то возвращается True, иначе возвращается False.

Создается пустой стек stack, который будет использоваться для отслеживания открытых скобок.
Создается словарь mapping, который содержит соответствия между закрывающими и открывающими скобками. Например, ')' соответствует '(', ']' соответствует '[', и так далее.
Происходит итерация по каждому символу char во входной строке s.
Для каждого символа char:
Если char является открывающей скобкой (т.е. содержится в значениях словаря mapping), она добавляется в стек stack.
Если char является закрывающей скобкой (т.е. содержится в ключах словаря mapping):
Если стек stack пуст, это означает, что нет соответствующей открывающей скобки для текущей закрывающей скобки, и функция возвращает False, так как порядок скобок неверен.
Иначе, сравнивается ожидаемая открывающая скобка (значение словаря mapping для текущей закрывающей скобки) с вершиной стека stack. Если они не совпадают, функция возвращает False, так как порядок скобок неверен. В противном случае, ожидаемая открывающая скобка удаляется из стека.
Если char не является ни открывающей, ни закрывающей скобкой, функция возвращает False, так как во входной строке содержится недопустимый символ.
После обработки всех символов во входной строке s, если стек stack остается пустым, это означает, что все скобки были правильно сбалансированы, и функция возвращает True. В противном случае, если стек stack не пуст, это означает, что не все скобки были правильно сбалансированы, и функция возвращает False.
"""

# tags: Algorithms
# kyu: 6

def valid_braces(s):
    stack = []
    mapping = {')': '(', ']': '[', '}': '{'}
    for char in s:
        if char in mapping.values():
            stack.append(char)
        elif char in mapping.keys():
            if not stack or mapping[char] != stack.pop():
                return False
        else:
            return False
    return not stack