"""
Функция find_nb использует цикл while для нахождения значения n, начиная с 1 и увеличивая его на единицу на каждой итерации, пока суммарный объем кубиков total_volume не станет больше или равным заданному объему m. Если значение total_volume становится равным m, то функция возвращает текущее значение n - 1, иначе возвращает -1, если такое значение n не существует.

Функция find_nb принимает на вход целое число m.
Инициализируется переменная n со значением 1, которая будет представлять количество кубиков.
Инициализируется переменная total_volume со значением 0, которая будет представлять суммарный объем кубиков.
В цикле while проверяется условие, пока total_volume меньше m.
Внутри цикла while выполняется сложение n в степени 3 (n^3) с текущим значением total_volume, чтобы учесть объем текущего кубика.
Значение n увеличивается на 1 на каждой итерации цикла.
Если total_volume становится равным m, то цикл завершается, и программа переходит к следующему шагу.
После выхода из цикла while проверяется условие: если total_volume стало равным m, то возвращается значение n - 1, так как на последней итерации цикла было увеличено значение n.
Если total_volume не стало равным m, то функция возвращает -1, так как такое значение n не существует для заданного объема m.
"""

# tags: Mathematics, Algorithms
# kyu: 6

def find_nb(m):
    """
    Функция принимает на вход целое число m и возвращает целое число n,
    соответствующее количеству кубиков, необходимых для построения здания
    с заданным объемом.
    Если такое n не существует, функция возвращает -1.
    """
    n = 1
    total_volume = 0

    while total_volume < m:
        total_volume += n**3
        n += 1

    if total_volume == m:
        return n - 1
    else:
        return -1