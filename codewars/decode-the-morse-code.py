"""
Создается словарь MORSE_CODE_DICT, который содержит соответствия между кодами морзянки и соответствующими символами на английском языке. Например, '.-' соответствует символу 'A', '--.' - 'G', и так далее.

Входной аргумент morse_code представляет собой строку с кодом морзянки, которую нужно декодировать.

С помощью метода strip() очищаем пробелы в начале и конце строки morse_code. Это делается, чтобы избежать ошибок при декодировании морзянки.

Строка morse_code разделяется на отдельные слова с помощью метода split(' '), который ищет три пробела подряд и использует их как разделитель между словами. Результат разделения сохраняется в переменной words в виде списка слов.

Создается пустой список decoded_words, который будет содержать декодированные слова.

Для каждого слова в списке words производится декодирование морзянки на символы английского текста. Сначала каждое слово разделяется на отдельные символы морзянки с помощью метода split(' '), который ищет один пробел как разделитель между символами. Результат разделения сохраняется в переменной letters в виде списка символов.

Создается пустая строка decoded_word, которая будет содержать декодированное слово.

Для каждого символа морзянки letter в списке letters проверяется его наличие в словаре MORSE_CODE_DICT. Если символ морзянки есть в словаре, его соответствующий символ на английском языке добавляется в конец строки decoded_word.

Завершив обработку всех символов морзянки в слове, декодированное слово decoded_word добавляется в список decoded_words.

После того как все слова в строке morse_code были декодированы и добавлены в список decoded_words, слова соединяются вместе с помощью метода join() и сохраняются в переменную decoded_sentence в виде декодированного предложения.

Функция возвращает decoded_sentence, содержащий декодированный текст на английском языке.
"""

# tags: Algorithms
# kyu: 6

def decode_morse(morse_code):
    # Морзянка с кодами букв и цифр
    MORSE_CODE_DICT = {'.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E', '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '.---': 'J', '-.-': 'K', '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O', '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T', '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X', '-.--': 'Y', '--..': 'Z', '-----': '0', '.----': '1', '..---': '2', '...--': '3', '....-': '4', '.....': '5', '-....': '6', '--...': '7', '---..': '8', '----.': '9', '.-.-.-': '.', '--..--': ',', '..--..': '?', '.----.': "'", '-.-.--': '!', '-..-.': '/', '-.--.': '(', '-.--.-': ')', '.-...': '&', '---...': ':', '-.-.-.': ';', '-...-': '=', '.-.-.': '+', '-....-': '-', '..--.-': '_', '.-..-.': '"', '...-..-': '$', '.--.-.': '@', '...---...': 'SOS', '-.-.--.': ')!'}

    # Очистка пробелов в начале и конце строки
    morse_code = morse_code.strip()

    # Разделение слов по трем пробелам
    words = morse_code.split('   ')

    # Декодирование каждого слова
    decoded_words = []
    for word in words:
        # Разделение символов морзянки по одному пробелу
        letters = word.split(' ')
        decoded_word = ''
        for letter in letters:
            if letter in MORSE_CODE_DICT:
                decoded_word += MORSE_CODE_DICT[letter]
        decoded_words.append(decoded_word)

    # Соединение слов вместе с пробелами
    decoded_sentence = ' '.join(decoded_words)

    return decoded_sentence