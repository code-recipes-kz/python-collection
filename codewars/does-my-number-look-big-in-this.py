"""
Функция принимает на вход один аргумент number, предполагаемое нарциссическое число, которое нужно проверить.
Внутри функции создается строковое представление числа num_str с помощью функции str(number). Это нужно для того, чтобы получить количество цифр в числе.
Затем, с помощью функции len(num_str) получаем количество цифр в числе и сохраняем это значение в переменную num_digits. Это значение будет использоваться как степень, в которую будут возводиться цифры числа.
Далее инициализируется переменная narcissistic_sum со значением 0. В эту переменную будет суммироваться результат возведения каждой цифры числа в степень num_digits.
Проходим циклом for по каждой цифре числа num_str, используя переменную digit_char для хранения символов цифр.
Внутри цикла for преобразуем символ цифры digit_char в целое число, используя функцию int(digit_char), и сохраняем это число в переменную digit.
Затем возводим цифру digit в степень num_digits, используя оператор ** (возведение в степень) и добавляем результат к переменной narcissistic_sum.
После завершения цикла for сумма narcissistic_sum будет содержать результат возведения всех цифр числа number в степень num_digits.
Далее сравниваем значение narcissistic_sum с исходным числом number. Если они равны, то функция возвращает True, иначе возвращает False.
"""

# tags: Algorithms
# kyu: 6

def is_narcissistic_number(number):
    # Преобразуем число в строку, чтобы получить количество его цифр
    num_str = str(number)
    # Получаем количество цифр в числе
    num_digits = len(num_str)
    # Инициализируем сумму, которая будет возводиться в степень
    narcissistic_sum = 0

    # Проходим по каждой цифре числа
    for digit_char in num_str:
        # Преобразуем цифру из строки в целое число
        digit = int(digit_char)
        # Возводим цифру в степень количества цифр в числе
        narcissistic_sum += digit ** num_digits

	return narcissistic_sum == number