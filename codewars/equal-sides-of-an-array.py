"""
Изначально у нас есть массив arr равный [1, 2, 3, 4, 3, 2, 1].
Мы создаем две переменные: left_sum для хранения суммы элементов слева от текущего индекса и right_sum для хранения суммы элементов справа от текущего индекса. Изначально обе переменные равны 0 и сумме всех элементов массива соответственно.
Мы перебираем индексы массива arr с помощью цикла for и переменной i от 0 до длины массива len(arr) - 1, где i - текущий индекс.
Для каждого индекса i:
Вычитаем значение элемента arr[i] из переменной right_sum, чтобы получить сумму элементов справа от текущего индекса.
Сравниваем значения переменных left_sum и right_sum. Если они равны, то это означает, что мы нашли индекс точки баланса, и мы возвращаем значение переменной i как результат.
Прибавляем значение элемента arr[i] к переменной left_sum, чтобы обновить сумму элементов слева от текущего индекса.
Если в цикле не нашли индекс точки баланса, возвращаем -1 как результат.
Программа завершается, и выводит индекс точки баланса (в данном случае 3) в массиве [1, 2, 3, 4, 3, 2, 1].
"""

# tags: Algorithms, Arrays, Fundamentals
# kyu: 6

def find_even_index(arr):
    # Изначально сумма слева и сумма справа равны 0
    left_sum = 0
    right_sum = sum(arr)

    # Перебираем индексы массива
    for i in range(len(arr)):
        # Вычитаем текущий элемент из суммы справа
        right_sum -= arr[i]

        # Если суммы слева и справа равны, возвращаем индекс
        if left_sum == right_sum:
            return i

        # Прибавляем текущий элемент к сумме слева
        left_sum += arr[i]

    # Если не найдено подходящего индекса, возвращаем -1
    return -1