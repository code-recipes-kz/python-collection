"""
Функция substring_sort проходит по каждой строке из a1 и a2 и проверяет, является ли строка из a1 подстрокой строки из a2. Если да, и эта подстрока еще не добавлена в результат, то она добавляется в список result. Затем список result сортируется в лексикографическом порядке и возвращается в качестве результата.

Создаем пустой список result, который будет содержать подстроки из a1, удовлетворяющие условию.
Проходим по каждой строке s1 из массива a1 с помощью цикла for s1 in a1:.
Внутри внешнего цикла, проходим по каждой строке s2 из массива a2 с помощью вложенного цикла for s2 in a2:.
Используем оператор in для проверки, является ли строка s1 подстрокой строки s2. Если условие выполняется, то переходим к следующему шагу.
Проверяем, содержится ли строка s1 уже в списке result с помощью оператора not in. Если s1 не содержится в result, то переходим к следующему шагу, иначе пропускаем текущую итерацию цикла.
Добавляем подстроку s1 в список result с помощью метода append().
Повторяем шаги 3-6 для всех строк из a2.
После завершения внутреннего цикла, возвращаемся к следующей строке s1 из a1 и повторяем шаги 3-7.
После завершения внешнего цикла, список result содержит все подстроки из a1, являющиеся подстроками строк из a2.
Используем метод sort() для сортировки списка result в лексикографическом порядке.
Возвращаем отсортированный список result в качестве результата работы функции.
"""

# tags: Arrays, Lists, Strings, Refactoring
# kyu: 6

def substring_sort(a1, a2):
    """
    Функция принимает на вход два массива строк a1 и a2.
    Возвращает отсортированный массив r в лексикографическом порядке,
    содержащий подстроки из a1, которые являются подстроками строк из a2.
    """
    # Создаем пустой список для результата
    result = []

    # Проходим по каждой строке из a1
    for s1 in a1:
        # Проходим по каждой строке из a2
        for s2 in a2:
            # Если строка из a1 является подстрокой строки из a2
            if s1 in s2:
                # Если эта строка еще не добавлена в результат, то добавляем ее
                if s1 not in result:
                    result.append(s1)

    # Сортируем результат в лексикографическом порядке
    result.sort()

    return result
