"""
Здесь f(x) - это функция, которую нужно решить, а half_interval_method() - это функция, которая реализует метод половинного деления для решения уравнения f(x) = 0. В функции half_interval_method() используется цикл while, который выполняется до тех пор, пока не будет найден корень уравнения или пока не будет достигнуто максимальное количество итераций. В каждой итерации вычисляется средняя точка интервала [a, b], затем проверяется, лежит ли корень уравнения между левым концом интервала a и средней точкой c, или между правым концом интервала b и средней точкой c. Затем интервал сужается, перемещая левый или правый конец к средней точке c. Когда разница между b и a становится достаточно маленькой или значение функции в средней точке становится близким к нулю, алгоритм останавливается и возвращает найденный корень.
"""

def f(x):
    """
    Функция, которую нужно решить
    Замените эту функцию своей собственной
    """
    return x**3 - 4*x - 9

def half_interval_method(a, b, tol=0.001, max_iters=100):
    """
    Метод половинного деления для решения уравнения f(x) = 0
    a: левый конец начального интервала
    b: правый конец начального интервала
    tol: точность результата
    max_iters: максимальное количество итераций
    """
    i = 0
    while i < max_iters:
        c = (a + b) / 2
        if f(c) == 0 or (b - a) / 2 < tol:
            return c
        i += 1
        if f(c) * f(a) > 0:
            a = c
        else:
            b = c
    return None

# Пример использования
a = -10
b = 10
root = half_interval_method(a, b)
if root:
    print(f"Корень уравнения: {root}")
else:
    print("Не удалось найти корень уравнения")
