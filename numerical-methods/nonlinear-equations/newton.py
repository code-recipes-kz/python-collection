"""
Определение функции newton_method, которая принимает на вход функцию f, её производную df, начальное приближение x0, допустимую погрешность tol и максимальное число итераций max_iter. Функция решает нелинейное уравнение f(x) = 0 с помощью метода Ньютона.

В теле функции newton_method создается переменная x, которая инициализируется значением начального приближения x0.

В цикле for выполняются итерации метода Ньютона. Цикл будет продолжаться до тех пор, пока не будет достигнута максимальная допустимая погрешность tol или не будет достигнуто максимальное число итераций max_iter.

Внутри цикла сначала вычисляется значение функции f в точке x и сохраняется в переменной fx.

Затем проверяется, достигнута ли требуемая точность. Если значение fx меньше, чем tol, значит, мы нашли корень уравнения, и функция возвращает значение x и число итераций i.

Если требуемая точность не достигнута, то вычисляется производная df в точке x и сохраняется в переменной dfx.

Затем проверяется, равна ли производная dfx нулю. Если равна, значит, мы не можем продолжать итерации, и функция возвращает None и число итераций i.

Если производная dfx не равна нулю, то вычисляется новое значение x с помощью формулы метода Ньютона: x = x - fx / dfx.

Цикл завершается, и если мы не нашли корень уравнения, то функция возвращает None и число итераций i.

Затем определен пример использования функции newton_method для решения уравнения x^2 - 2 = 0. Определены функция f и её производная df, начальное приближение x0, а затем вызвана функция newton_method с этими параметрами.

Если функция newton_method нашла корень уравнения, то программа выводит его и число итераций. Если корень не найден, то программа выводит сообщение о том, что решение не найдено.
"""

import math

def newton_method(f, df, x0, tol=1e-6, max_iter=100):
    """
    Решает нелинейное уравнение f(x) = 0
    с помощью метода Ньютона.
    f - функция, для которой ищется корень
    df - производная функции f
    x0 - начальное приближение
    tol - допустимая погрешность
    max_iter - максимальное число итераций

    Возвращает корень уравнения и число итераций.
    """
    x = x0
    for i in range(max_iter):
        fx = f(x)
        if abs(fx) < tol:
            return x, i
        dfx = df(x)
        if dfx == 0:
            break
        x = x - fx / dfx
    return None, i

# Пример использования функции newton_method
# Решение уравнения x^2 - 2 = 0
f = lambda x: x**2 - 2
df = lambda x: 2*x
x0 = 1.0
root, num_iter = newton_method(f, df, x0)
if root is not None:
	print(f"Корень уравнения: {root}")
	print(f"Число итераций: {num_iter}")
else:
	print("Решение не найдено.")
