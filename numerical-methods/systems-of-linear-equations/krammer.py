"""
В этом примере функция kramer(A, b) принимает на вход матрицу A коэффициентов системы линейных уравнений и вектор b правых частей. Она использует вспомогательную функцию det(A), которая находит определитель матрицы A методом разложения по первому столбцу.

Функция kramer(A, b) решает систему методом Краммера, находя определительы матриц, полученных заменой i-го столбца матрицы A на вектор b. Решение системы получается делением определителей на определитель матрицы A.

В конце программы приведен пример использования функции kramer(A, b) для решения системы уравнений.

Сначала определяем функцию kramer(A, b), которая принимает на вход матрицу A коэффициентов системы линейных уравнений и вектор b правых частей.

Находим размерность матрицы A.

Находим определитель матрицы A с помощью вспомогательной функции det(A).

Создаем пустой список x, который будет хранить решения системы.

Для каждой неизвестной x[i] находим определитель матрицы, полученной заменой i-го столбца матрицы A на вектор b.

Возвращаем список решений x.

Определяем функцию det(A), которая находит определитель матрицы A методом разложения по первому столбцу.

Находим размерность матрицы A.

Если матрица A имеет размерность 1x1, то возвращаем ее единственный элемент, который и есть ее определитель.

Если матрица A имеет размерность больше 1x1, то находим ее определитель методом разложения по первому столбцу.

В конце программы определяем матрицу коэффициентов A, вектор правых частей b и вызываем функцию kramer(A, b) для нахождения решений системы. Затем выводим полученные решения на экран.
"""

def kramer(A, b):
    n = len(A)
    detA = det(A)
    x = []

    for i in range(n):
        B = A.copy()
        for j in range(n):
            B[j][i] = b[j]
        detB = det(B)
        x.append(detB/detA)

    return x

def det(A):
    n = len(A)
    if n == 1:
        return A[0][0]
    else:
        sign = 1
        detA = 0
        for j in range(n):
            B = []
            for i in range(1,n):
                row = []
                for k in range(n):
                    if k != j:
                        row.append(A[i][k])
                B.append(row)
            detA += sign * A[0][j] * det(B)
            sign *= -1
        return detA

# Пример использования
A = [[2, 3, -1],
     [4, -1, 3],
     [1, 2, -1]]
b = [9, 8, 3]

x = kramer(A, b)

print("Решение системы:")
print(f"x1 = {x[0]}")
print(f"x2 = {x[1]}")
print(f"x3 = {x[2]}")
